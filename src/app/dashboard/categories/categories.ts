import * as TECHNOLOGIES from '../../technologies/technologies';
import {Category} from '../../models/category';

const SENSORS: Category = {
  title: 'Sensoren',
  icon: 'sensors',
  technologies: [
    TECHNOLOGIES.ACCELEROMETER,
    TECHNOLOGIES.AMBIENT_LIGHT_SENSOR,
    TECHNOLOGIES.DEVICEORIENTATION_EVENT,
    TECHNOLOGIES.GEOLOCATION,
    TECHNOLOGIES.GEOLOCATION_SENSOR,
    TECHNOLOGIES.GYROSCOPE,
    TECHNOLOGIES.MAGNETOMETER,
    TECHNOLOGIES.ORIENTATION_SENSOR,
    TECHNOLOGIES.PROXIMITY_SENSOR,
  ],
};
const DEVICE_INFOS: Category = {
  title: 'Geräteinformationen',
  icon: 'perm_device_information',
  technologies: [
    TECHNOLOGIES.BATTERY_STATUS,
    TECHNOLOGIES.COMPUTE_PRESSURE,
    TECHNOLOGIES.DEVICE_MEMORY,
    TECHNOLOGIES.DEVICE_POSTURE,
    TECHNOLOGIES.MEDIA_CAPABILITIES,
    TECHNOLOGIES.NETWORK_INFORMATION
  ],
};
const SCREEN: Category = {
  title: 'Bildschirm',
  icon: 'monitor',
  technologies: [
    TECHNOLOGIES.FULLSCREEN,
    TECHNOLOGIES.MULTI_SCREEN_WINDOW_PLACEMENT,
    TECHNOLOGIES.PRESENTATION,
    TECHNOLOGIES.SCREEN_ORIENTATION,
    TECHNOLOGIES.SCREEN_WAKE_LOCK
  ],
};
const CAM_MIC_CAPTURE: Category = {
  title: 'Kamera, Mikrofon und Aufnahme',
  icon: 'perm_camera_mic',
  technologies: [
    TECHNOLOGIES.HTML_MEDIA_CAPTURE,
    TECHNOLOGIES.MEDIA_CAPTURE_AND_STREAMS,
    TECHNOLOGIES.MEDIA_CAPTURE_FROM_DOM_ELEMENTS,
    TECHNOLOGIES.MEDIASTREAM_IMAGE_CAPTURE,
    TECHNOLOGIES.MEDIASTREAM_RECORDING,
    TECHNOLOGIES.SCREEN_CAPTURE,
    TECHNOLOGIES.SHAPE_DETECTION,
    TECHNOLOGIES.TEXT_DETECTION
  ],
};
const INPUT_OUTPUT_DEVICES: Category = {
  title: 'Zugriff auf Eingabe- & Ausgabegeräte',
  icon: 'cable',
  technologies: [
    TECHNOLOGIES.AUDIO_OUTPUT_DEVICES,
    TECHNOLOGIES.GAMEPAD,
    TECHNOLOGIES.REMOTE_PLAYBACK,
    TECHNOLOGIES.WEB_MIDI,
    TECHNOLOGIES.WEBHID,
    TECHNOLOGIES.WEBXR_DEVICE
  ],
};
const INPUT_PROCESSING: Category = {
  title: 'Eingabeverarbeitung',
  icon: 'spellcheck',
  technologies: [
    TECHNOLOGIES.INPUT_DEVICE_CAPABILITIES,
    TECHNOLOGIES.KEYBOARD_LOCK,
    TECHNOLOGIES.KEYBOARD_MAP,
    TECHNOLOGIES.POINTER_EVENTS,
    TECHNOLOGIES.POINTER_LOCK,
    TECHNOLOGIES.TOUCH_EVENTS,
    TECHNOLOGIES.VIRTUALKEYBOARD,
    TECHNOLOGIES.WEB_SPEECH
  ],
};
const FURTHER_HARDWARE_AND_PERIPHERAL: Category = {
  title: 'Weitere Hardware- und Peripheriefunktionalitäten',
  icon: 'settings_input_component',
  technologies: [
    TECHNOLOGIES.VIBRATION,
    TECHNOLOGIES.WEB_BLUETOOTH,
    TECHNOLOGIES.WEB_NFC,
    TECHNOLOGIES.WEB_SERIAL,
    TECHNOLOGIES.WEBUSB
  ],
};
const LOCAL_RESOURCES: Category = {
  title: 'Lokale Ressourcen',
  icon: 'save',
  technologies: [
    TECHNOLOGIES.CONTACT_PICKER,
    TECHNOLOGIES.CONTENT_INDEX,
    TECHNOLOGIES.FILE,
    TECHNOLOGIES.FILE_SYSTEM_ACCESS,
    TECHNOLOGIES.INDEXED_DATABASE,
    TECHNOLOGIES.LOCAL_FONT_ACCESS,
    TECHNOLOGIES.SERVICE_WORKER,
    TECHNOLOGIES.STORAGE_STANDARD
  ],
};
const PLATFORM_UI: Category = {
  title: 'Plattformfunktionalitäten mit eigener UI',
  icon: 'dvr',
  technologies: [
    TECHNOLOGIES.BADGING,
    TECHNOLOGIES.MEDIA_SESSION_STANDARD,
    TECHNOLOGIES.NOTIFICATIONS,
    TECHNOLOGIES.PAYMENT_REQUEST,
    TECHNOLOGIES.PICTURE_IN_PICTURE,
    TECHNOLOGIES.WEB_APP_MANIFEST,
    TECHNOLOGIES.WEB_AUTHENTICATION,
    TECHNOLOGIES.WEB_SHARE
  ],
};
const FURTHER_PLATFORM: Category = {
  title: 'Weitere Plattformfunktionalitäten',
  icon: 'lightbulb',
  technologies: [
    TECHNOLOGIES.CLIPBOARD,
    TECHNOLOGIES.GET_INSTALLED_RELATED_APPS,
    TECHNOLOGIES.IDLE_DETECTION,
    TECHNOLOGIES.PAGE_VISIBILITY,
    TECHNOLOGIES.PAYMENT_HANDLER,
    TECHNOLOGIES.WEBOTP
  ],
};

export const CATEGORIES: Category[] = [
  SENSORS,
  DEVICE_INFOS,
  SCREEN,
  CAM_MIC_CAPTURE,
  INPUT_OUTPUT_DEVICES,
  INPUT_PROCESSING,
  FURTHER_HARDWARE_AND_PERIPHERAL,
  LOCAL_RESOURCES,
  PLATFORM_UI,
  FURTHER_PLATFORM
];
